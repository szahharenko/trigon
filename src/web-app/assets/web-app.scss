$assetPath : 'https://dev.code-essence.eu/lidl/media/';

html, body {
  min-height: 100%;
  padding: 0;
  margin: 0;
  background: var(--light-green);
  color: var(--blue);
  --buble-size: 560px;
}

.main-app {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;

  form {
    .checkbox {
      position: relative;
      overflow: hidden;
      display: flex;
      justify-content: space-between;
      align-items: center;

      input[type=checkbox] {
        position: absolute;
        bottom: 100%;
        right: 100%;
        margin: 0;
        width: 0;
        height: 0;
        visibility: hidden;

        & + span {
          display: inline-block;
          border: solid 2px var(--blue);
          box-sizing: border-box;
          width: calc( var(--input-height) / 1.5 );
          height: calc( var(--input-height) / 1.5 );
        }
        &.is-invalid + span {
          border: solid 2px var(--error);
        }
        &:checked + span {
          background-color: var(--blue);
        }        
      }
    }
    .is-invalid {
      border-color: var(--error);
    }
    .form-submit {
      margin-top: var(--base-space);
    }
  }

  .backstage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;    
    background: url(#{$assetPath}bottom.png) bottom center no-repeat;
    background-size: contain;
    animation: appear .5s ease forwards;
    z-index: 1;
    &__overlay {
      &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;        
        background-color: rgba($color: #000000, $alpha: .4);
      }
    }

    .tree-top {
      position: absolute;
      top:0;
      width: 50%;
      height: 50%;
      background-size: contain;
      background-repeat: no-repeat;
      animation: appear .8s ease forwards;

      &__right {
        background-image: url(#{$assetPath}top-right.png);
        background-position: top right;
        right: 0;        
      }

      &__left {
        background-image: url(#{$assetPath}top-left.png);
        background-position: top left;
        left: 0;
      }      
    }
  }
  .leafs {
    position: absolute;
    z-index: 2;
    width: 100%;
    height: 100%;
    background-color: rgba($color: #000000, $alpha: 0);    
    transition: all .3s;
    pointer-events: none;

    .leaf {
      position: fixed;        
      width: 25vw;
      height: 25vw;      
      max-width: 250px;
      max-height: 250px;
      transition: all .3s;
      &::after,
      &::before {
        content: '';
        position: absolute;
        top: 0%;
        left: 0;
        width: 100%;
        height: 100%;
        transition: all .3s;
      }
    }
    .leaf1 {
      top: 10%;
      left: 10%;
      transform-origin: top left;
      transform: rotate(0deg);
      animation: leaf1 35s ease-in-out infinite;
      &::before {
        background: url(#{$assetPath}leaf-2-glow.png) top left no-repeat;
        background-size: contain;
        opacity: 0;
      }      
      &::after {
        background: url(#{$assetPath}leaf-2.png) top left no-repeat;
        background-size: contain;
      }
    }
    .leaf2 {
      bottom: 10%;
      left: 12%;
      transform-origin: bottom left;
      transform: rotate(0deg);
      animation: leaf2 25s ease-in-out infinite;
      animation-delay: 1s;
      &::before {
        background: url(#{$assetPath}leaf-1-glow.png) top left no-repeat;
        background-size: contain;
        opacity: 0;
      }      
      &::after {
        background: url(#{$assetPath}leaf-1.png) top left no-repeat;
        background-size: contain;
      }      
    }
    .leaf3 {
      top: 20%;
      right: 20%;
      background-size: contain;
      transform-origin: top right;
      transform: rotate(0deg);
      animation: leaf3 25s ease-in-out infinite;
      animation-delay: 1s;
      &::before {
        background: url(#{$assetPath}leaf-3-glow.png) top left no-repeat;
        background-size: contain;
        opacity: 0;
      }      
      &::after {
        background: url(leaf-3.png) top left no-repeat;
        background-size: contain;
      }       
    }

    &__active {
      z-index: 4;
      pointer-events: all;

      .leaf {
        cursor: pointer;
        animation: none;        
        &:hover {
          &::before {
            opacity: 1;            
            transform: scale(1.3);
          }              
        }
        &::before {
          opacity: .7;
          transform: scale(1.1);          
        }        
      }
      .leaf1 {
        top: 20%;
        left: 26%;
        transform: rotate(-15deg);

      }
      .leaf2 {
        bottom: 20%;
        left: 30%;
        transform: rotate(-15deg);
      }
      .leaf3 {
        top: 25%;
        right: 22%;
      }   
    }    
  }
  .app-container {
    flex: 1;
    position: relative;
  }
}

.loader {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  > div {
    background: #fff;
    border-radius: 100%;    
    padding: calc(var(--base-space)*4);
    text-align: center;
    min-width: var(--buble-size);
    min-height: var(--buble-size);
    display: flex;
    justify-content: center;
    align-items: center;

    h1 {
      font-size: 2.5rem;
      margin: 0;
    }

    p {
      font-size: 1.5rem;
      margin: var(--base-space) 0 0;
    }

    &::before {
      content: '';
      position: absolute;
      top: calc(var(--base-space)*2);
      left: calc(var(--base-space)*2);
      width: calc(100% - var(--base-space)*4);
      height: calc(100% - var(--base-space)*4);
      border: dashed 4px var(--blue);
      border-radius: 100%;
      animation: rotate 15s infinite linear;
    }

    &.bounce-out {
      animation: popOut var(--view-animation-time) cubic-bezier(0.775, -0.600, 0.000, 1.605) forwards;
    }     
  }
}

.content {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 3;

  > div {
    background: #fff url(#{$assetPath}ring.png) center center no-repeat;
    background-size: cover;
    border-radius: 100%;    
    padding: calc(var(--base-space)*4);
    text-align: center;
    width: 35vmin;
    height: 35vmin;
    min-width: var(--buble-size);
    min-height: var(--buble-size);    
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transform: scale(0%);

    h1 {
      font-size: 2.5rem;
      margin: 0;
    }

    &.bounce-in {
      animation: popIn var(--view-animation-time) cubic-bezier(.31,2,.84,.6) forwards;

      .letter-in {
        > span {
          display: inline-block;
          position: relative;
          animation: letterIn .4s linear forwards;
          opacity: 0;
          transform: rotate(107deg) scale(.2) translateX(570%) translateY(150%);          
          @for $i from 1 through 20 {
            $delay: calc($i / 15 + 1);      
            &:nth-child(#{$i}) {
              animation-delay: #{$delay}s;
            }
          }  
        }
      }

    }
    .welcome {
      h1 {
        font-size: 5rem;
        line-height: 5rem;
      }
    }
    .reg {

      padding: 0 0.8rem;

      p {
        font-size: 1rem;
        margin: var(--base-space/2) 0 0;
      }    
    }

  }
}

.reg {
  .info-buble {
    position: absolute;
    color: var(--blue);
    top: 50%;
    left: 50%;
    margin: calc(var(--buble-size)/4 * -1);
    width: calc(var(--buble-size)/2);
    height: calc(var(--buble-size)/2);
    display: flex;
    align-items: center;
    justify-content: center;    
    transform: rotate(0deg) translateX(calc(var(--buble-size) * 0.85)) rotate(0deg);
    animation: prizeOrbit 30s linear infinite;
    opacity: 0;
    cursor: pointer;
    border-radius: 100%;

    h2 {
      text-transform: uppercase;
      color: var(--green);
    }

    &::before {
      content: '';
      position: absolute;
      top: 0%;
      left: 0;
      width: 100%;
      height: 100%;
      background-color:rgba($color: #fff, $alpha: .8);
      border-radius: 100%;
      z-index: -1;
    }
  }
}

.prize {
  img {display: block;max-height: 200px;margin: 0 auto;}
}

.rules-container {
  position: fixed;
  z-index: 11;
  top: 50%;
  left: 50%;
  width: 740px;
  max-height: min(100vh, 740px);
  overflow: auto;
  background-color: rgba($color: #000000, $alpha: .9);;
  color: #fff;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  padding: calc( var(--base-space) * 2 );

  .close-button {
    position: absolute;
    top: calc( var(--base-space) / 2);
    right: calc( var(--base-space) / 2);
    border: solid 2px #fff;
    padding: 15px;
    cursor: pointer;
    font-size: 40px;
    line-height: 40px;
  }
}

.toggle-rules-button {
  position: fixed;
  top: 5%;
  right: 5%;
  z-index: 10;
}

.fade-stack {
  > * {
    animation: fadeIn .5s ease forwards;
    opacity: 0;
    @for $i from 1 through 20 {
      $delay: calc($i / 10);
      &:nth-child(#{$i}) {
        animation-delay: #{$delay}s;
      }
    }
  }
 
}

@keyframes rotate {
  from {transform: rotate(0deg);}
  to {transform: rotate(360deg);}
}
@keyframes popOut {
  from {transform: scale(100%);}
  5% {transform: scale(110%);}
  to {transform: scale(0%);}
}
@keyframes popIn {
  from {transform: scale(0%);}
  90% {transform: scale(110%);}
  to {transform: scale(100%);}
}
@keyframes appear {
  from {
    opacity: 0;
    transform: scale(110%);
  }
  to {
    opacity: 1;
    transform: scale(100%);
  }
}

@keyframes leaf1 {
  50% {transform: rotate(17deg);}
}
@keyframes leaf2 {
  50% {transform: rotate(-12deg);}
}
@keyframes leaf3 {
  50% {transform: rotate(12deg);}
}
@keyframes fadeIn {
  from {opacity: 0;}
  to {opacity: 1;}
}

@keyframes letterIn {
  from {
    opacity: 0;
    transform: rotate(107deg) scale(.2) translateX(570%) translateY(150%);
  }
  100% {
    opacity: 1;
    transform: rotate(0deg) scale(1) translateX(0%) translateY(0%);    
  }
}

@keyframes prizeOrbit {
  from { opacity: 1; transform: rotate(0deg) translateX(calc(var(--buble-size) * 0.85)) rotate(0deg); }
  to   { opacity: 1; transform: rotate(360deg) translateX(calc(var(--buble-size) * 0.85)) rotate(-360deg); }
}